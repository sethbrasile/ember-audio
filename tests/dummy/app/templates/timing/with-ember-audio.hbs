<div class="content">
  <h2>Timing with Ember Audio</h2>

  <p>
    There are two ways to schedule sounds with Ember Audio:
  </p>
</div>

<div class="content">
  <h3>1: Manually passing a time to a <code>Sound</code> or a <code>Track</code></h3>
  <p>
    Using a fixed moment in time with the <code>playAt</code> method, or by
    using an amount of time from now with the <code>playIn</code> method.
  </p>
</div>

{{#code-block language="javascript"}}
  this.get('audio').load('some.mp3').asSound('some-sound');

  // some time later...

  const audio = this.get('audio');
  const now = audio.get('audioContext.currentTime');

  audio.getSound('some-sound').playAt(now + 1); // plays in 1 second
{{/code-block}}

{{#code-block language="javascript"}}
  this.get('audio').load('some.mp3').asSound('some-sound');

  // some time later...

  this.get('audio').getSound('some-sound').playIn(1); // plays in 1 second
{{/code-block}}

<div class="content">
  <h3>2: By using a <code>BeatTrack</code></h3>
</div>

{{#code-block language="javascript"}}
  this.get('audio').load('some.mp3').asBeatTrack('some-sound');

  // some time later...

  const beatTrack = this.get('audio').getBeatTrack('some-sound');
  const BPM = 120;

  // playBeats() accepts BPM and will play all the beatTrack's beats at that BPM,
  beatTrack.playBeats(BPM);
{{/code-block}}

<div class="content">
  <p>
    Instead of using <code>beatTrack.playBeats</code>, you can also call a Beat
    instance's <code>playIn</code> method directly, passing an amount of time
    from now (in seconds) that the beat should play.
  </p>
</div>

{{#code-block language="javascript"}}
  // http://bradthemad.org/guitar/tempo_explanation.php
  const eighthNoteDuration = (240 * 1/8) / BPM;

  beatTrack.get('beats').map((beat, beatIndex) => {
    // Each "beat" is a "Beat" instance
    beat.playIn(beatIndex * eighthNoteDuration);
  });
{{/code-block}}

<div class="content">
  <p>
    <code>beatTrack.playActiveBeats</code> and <code>beat.ifActivePlayIn</code>
    are also available which will allow you to mark a beat's <code>active</code>
    property and the method will play rests (periods with no audio) during any
    beat that isn't <code>active</code>. This is to facilitate the way that most
    "drum machines" work.
  </p>

  <p>
    Take a look at the {{#link-to "timing.drum-machine"}}Drum Machine{{/link-to}} for
    examples.
  </p>
</div>
