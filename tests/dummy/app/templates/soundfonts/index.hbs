<div class="content">
  <h2>Play a Soundfont</h2>
  {{#if this.isLoading}}
    <div class="spinner">
      <div class="rect1"></div>
      <div class="rect2"></div>
      <div class="rect3"></div>
      <div class="rect4"></div>
      <div class="rect5"></div>
    </div>
  {{else}}
    <div id="piano">
      <ol>
        {{#each this.notes as |note|}}
          <li role="button" class={{if note.accidental "black"}}
            {{action "playPianoNote" note on="touchStart"}}
            {{action "playPianoNote" note on="mouseDown"}}
          >
            {{note.name}}
          </li>
        {{/each}}
      </ol>
    </div>
  {{/if}}
</div>

<div class="content">
  <p>
    <strong>Important Note</strong>: Soundfonts are javascript files, so if you
    keep your soundfonts inside your project, ember-cli is going to minify them.
  </p>
  <p>
    This is not ok.
    <a href="http://ember-cli.com/user-guide/#minifying">
      Exclude your soundfonts from minification.
    </a>
  </p>
</div>

<div class="content">
  <CodeBlock @language="handlebars">
  &#123;{#if isLoading}}
    &#123;{!-- Some loading indicator... --}}
  &#123;{else}}
    &lt;div id="piano">
      &lt;ol>
        &#123;{#each notes as |note|}}
          &lt;li class=&#123;{if note.accidental "black"}}
            &#123;{!-- Specify both action types so multitouch works on touch devices --}}
            &#123;{action "playPianoNote" note on="touchStart"}}
            &#123;{action "playPianoNote" note on="mouseDown"}}
          >
            &#123;{note.name}}
          &lt;/li>
        &#123;{/each}}
      &lt;/ol>
    &lt;/div>
  &#123;{/if}}
  </CodeBlock>

  <CodeBlock @language="javascript">
  export default Ember.Whatever.extend({
    audio: Ember.inject.service(),
    isLoading: false,
    notes: null,

    initSoundFont: on('init', function() {
      // piano.js is a soundfont created with MIDI.js' Ruby-based soundfont converter
      this.get('audio').load('/ember-audio/piano.js').asFont('piano')
        .then((font) => {
          // Slicing just so the whole keyboard doesn't show up on the screen
          this.set('notes', font.get('notes').slice(39, 51));
          this.set('isLoading', false);
        });
    }),

    actions: {
      playPianoNote(note) {
        note.play();
      }
    }
  });
  </CodeBlock>
</div>
